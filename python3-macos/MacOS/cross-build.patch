diff -urN cp3.x.x-a/configure.ac cp3.x.x-b/configure.ac
--- cp3.x.x-a/configure.ac	2021-11-15 09:43:00.000000000 -0800
+++ cp3.x.x-b/configure.ac	2022-04-25 16:19:55.175833734 -0700
@@ -387,6 +387,7 @@
 then
     # avoid using uname for cross builds
     if test "$cross_compiling" = yes; then
+       ac_sys_release=
        # ac_sys_system and ac_sys_release are used for setting
        # a lot of different things including 'define_xopen_source'
        # in the case statement below.
@@ -403,12 +404,32 @@
 	*-*-vxworks*)
 	    ac_sys_system=VxWorks
 	    ;;
+	*-*-darwin*)
+	    ac_sys_system=Darwin
+	    ac_sys_release=$(echo $host | sed -n 's/.*-[^0-9]\+\([0-9]\+\)/\1/p')
+	    if test -z "$ac_sys_release"; then
+	            # A reasonable default.
+	            ac_sys_release=11
+	    fi
+            # Use the last released version number for old versions.
+	    if test "$ac_sys_release" = "9" ; then
+		    ac_sys_release=9.8
+	    elif test "$ac_sys_release" = "10" ; then
+		    ac_sys_release=10.8
+	    elif test "$ac_sys_release" = "11" ; then
+	            ac_sys_release=11.4.0
+	    elif test "$ac_sys_release" = "12" ; then
+		    ac_sys_release=12.0.0
+	    else
+		    # ..and .0.0 for unknown versions.
+		    ac_sys_release=${ac_sys_release}.0.0
+	    fi
+	    ;; 
 	*)
 		# for now, limit cross builds to known configurations
 		MACHDEP="unknown"
 		AC_MSG_ERROR([cross build not supported for $host])
 	esac
-	ac_sys_release=
     else
 	ac_sys_system=`uname -s`
 	if test "$ac_sys_system" = "AIX" \
@@ -449,6 +470,9 @@
 	*-*-cygwin*)
 		_host_cpu=
 		;;
+	*-*-darwin*)
+	        _host_cpu=$host_cpu
+	        ;;
 	*-*-vxworks*)
 		_host_cpu=$host_cpu
 		;;
@@ -1601,6 +1625,27 @@
 AC_SUBST(CFLAGS_NODIST)
 AC_SUBST(LDFLAGS_NODIST)
 
+if test "x$cross_compiling" = xyes; 
+then
+    function cross_arch
+    {
+        case $host in
+	  x86_64*darwin*)
+	    echo i386
+          ;;
+	  x86_64*)
+            echo x86_64
+	  ;;
+	  *)
+            echo i386
+	  ;;
+	esac
+    }
+    ARCH_PROG=cross_arch
+else
+    ARCH_PROG=/usr/bin/arch
+fi
+
 # The -arch flags for universal builds on macOS
 UNIVERSAL_ARCH_FLAGS=
 AC_SUBST(UNIVERSAL_ARCH_FLAGS)
@@ -1979,7 +2024,7 @@
                     ;;
                 esac
             else
-                if test `/usr/bin/arch` = "i386"
+                if test "$($ARCH_PROG)" = "i386";
                 then
                     # 10.4 was the first release to support Intel archs
                     cur_target="10.4"
@@ -2474,7 +2519,7 @@
     if test "${enable_universalsdk}"; then
 	    :
     else
-        LIBTOOL_CRUFT="${LIBTOOL_CRUFT} -arch_only `/usr/bin/arch`"
+        LIBTOOL_CRUFT="${LIBTOOL_CRUFT} -arch_only $($ARCH_PROG)"
     fi
     LIBTOOL_CRUFT=$LIBTOOL_CRUFT' -install_name $(PYTHONFRAMEWORKINSTALLDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'
     LIBTOOL_CRUFT=$LIBTOOL_CRUFT' -compatibility_version $(VERSION) -current_version $(VERSION)';;
@@ -2499,7 +2544,7 @@
     ]])],[ac_osx_32bit=yes],[ac_osx_32bit=no],[ac_osx_32bit=yes])
 
     if test "${ac_osx_32bit}" = "yes"; then
-    	case `/usr/bin/arch` in
+    	case $($ARCH_PROG) in
     	i386)
     		MACOSX_DEFAULT_ARCH="i386"
     		;;
@@ -2511,7 +2556,7 @@
     		;;
     	esac
     else
-    	case `/usr/bin/arch` in
+    	case $($ARCH_PROG) in
     	i386)
     		MACOSX_DEFAULT_ARCH="x86_64"
     		;;
